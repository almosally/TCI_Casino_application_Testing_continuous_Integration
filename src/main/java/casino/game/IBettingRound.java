package casino.game;

import bettingauthorityapi.BetToken;
import casino.bet.Bet;
import models.BettingRoundID;

import java.util.Set;

public interface IBettingRound {
    /**
     * <DIV>
     *
     * <strong>Expected behaviour:</strong>
     *   <ul>
     *       <li>A game consist of betting rounds one after another</li>
     *       <li>Is one round un a game</li>
     *       <li>a bet submitted through a betting machine</li>
     *       <li>Max 1 bet per machine</li>
     *       <li>bet stored by betting round</li>
     *       <li>BettingRoundID and gambling token used to create Betting round</li>
     *       <li>Betting_round ID generated on start by the casino</li>
     *       <li>is presented to the gambling authority</li>
     *
     *
     * </ul>
     *
     * </DIV>
     *
     * @return BettingRoundID
     */
    BettingRoundID getBettingRoundID();

    /**
     * <DIV>
     * <strong>Expected behaviour:</strong>
     *
     *
     *        <ul>
     *            <li>Player place a bet by using his card</li>
     *            <li>the machine check with the teller if the card has enough credit to place a bet</li>
     *             <li>Bet submitted by the betting machine</li>
     *         </ul>
     *
     * </DIV>
     *      *
     *      * @param bet
     *      * @return boolean A gambler can only place one bet per betting round.
     */
    boolean placeBet(Bet bet);

    /**
     * <div>
     *      <strong>Expected behaviour:</strong>
     *      <p>
     *     The bets are made during the round
     *     </p>
     * </div>
     *
     * @return list ofBetsMade
     */
    Set<Bet> getAllBetsMade();

    /**
     * <div>
     *     <strong>Expected behaviour:</strong>
     *          <p>
     *            the gambling round asks the gambling authority for a random whole-number value "the randomWinValue"
     *            value generated by BetToken authority
     *          </p>
     *
     * </div>
     *
     * @return BetToken
     */
    BetToken getBetToken();

    /**
     * <div>
     *          <strong>Expected behaviour:</strong>
     *         <ul>
     *             <li>All bets made during the betting round</li>
     *         <li>betting round keep tracking of all bets</li>
     *         </ul>
     *
     * </div>
     *
     * @return number of bets
     */
    int numberOFBetsMade();
}
