plugins {
    id 'java'
    id 'jacoco'
    id 'checkstyle'
}

group 'org.example'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    testCompile "org.mockito:mockito-core:2.+"
    testCompile group: 'pl.pragmatists', name: 'JUnitParams', version: '1.1.1'
    implementation 'org.easytesting:fest-assert-core:2.0M8'
    implementation 'joda-time:joda-time:2.10.5'
}

//Include Test classes to Javadoc
javadoc {
    classpath += sourceSets.test.compileClasspath
    source += sourceSets.test.allJava
}

jacoco {
    toolVersion = "0.8.5"
    reportsDir = file("$buildDir/jacoco-reports")
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    'bettingauthorityapi',
                    'casino/bet'
            ])
        }))
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.8 //TODO CHECK THIS
            }
        }
    }
}

// Logs more details to failed tests.
test {
    testLogging {
        exceptionFormat = 'full'
    }
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    'bettingauthorityapi',
                    'casino/bet'
            ])
        }))
    }
}

checkstyle {
    toolVersion '7.8.1'
}

jacocoTestCoverageVerification.dependsOn jacocoTestReport
check.dependsOn jacocoTestCoverageVerification
